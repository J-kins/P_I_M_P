name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: pimp_db
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3306:3306

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, gd, zip

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Copy configuration
      run: |
        cp config.php.example config.php
        cp admin/index.example.php admin/index.php
        cp public/index.example.php public/index.php

    - name: Install PHP dependencies
      run: composer install --no-progress --no-suggest

    - name: Run PHP tests
      run: ./vendor/bin/phpunit

    - name: Run JavaScript tests
      run: |
        cd assets/js
        npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'

    - name: Build static assets
      run: |
        # Build any CSS/JS assets
        cd assets/js
        npm install
        npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v2

    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./public
        destination: ./_site

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./_site

  pages:
    needs: deploy
    runs-on: ubuntu-latest
    
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v1